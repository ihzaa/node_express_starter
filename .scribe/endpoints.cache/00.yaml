## Autogenerated by Scribe. DO NOT MODIFY.

name: Endpoints
endpoints:
  - uri: /api/permissions
    httpMethods:
      - GET
    metadata:
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: {}
    queryParameters: {}
    bodyParameters: {}
    responses:
      - status: 200
        description: ''
        headers:
          access-control-allow-origin: '*'
          content-type: application/json; charset=utf-8
        content: |-
          {
              "user_config": [
                  "view user_config_role",
                  "create user_config_role",
                  "update user_config_role",
                  "delete user_config_role",
                  "view user_config_user",
                  "create user_config_user",
                  "update user_config_user",
                  "delete user_config_user"
              ]
          }
    responseFields: {}
  - uri: /api/roles
    httpMethods:
      - GET
    metadata:
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: {}
    queryParameters: {}
    bodyParameters: {}
    responses:
      - status: 400
        description: ''
        headers:
          access-control-allow-origin: '*'
          content-type: application/json; charset=utf-8
        content: |-
          {
              "errors": {
                  "message": "User Not Logged In!"
              }
          }
    responseFields: {}
  - uri: /api/roles
    httpMethods:
      - POST
    metadata:
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: {}
    queryParameters: {}
    bodyParameters: {}
    responses:
      - status: 400
        description: ''
        headers:
          access-control-allow-origin: '*'
          content-type: application/json; charset=utf-8
        content: |-
          {
              "errors": {
                  "message": "User Not Logged In!"
              }
          }
    responseFields: {}
  - uri: '/api/roles/:id'
    httpMethods:
      - GET
    metadata:
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        example: sunt
        required: true
        type: string
        description: The ID of the api/role.
        match: ':id'
    queryParameters: {}
    bodyParameters: {}
    responses:
      - status: 400
        description: ''
        headers:
          access-control-allow-origin: '*'
          content-type: application/json; charset=utf-8
        content: |-
          {
              "errors": {
                  "message": "User Not Logged In!"
              }
          }
    responseFields: {}
  - uri: '/api/roles/:id'
    httpMethods:
      - PUT
    metadata:
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        example: sit
        required: true
        type: string
        description: The ID of the api/role.
        match: ':id'
    queryParameters: {}
    bodyParameters: {}
    responses:
      - status: 400
        description: ''
        headers:
          access-control-allow-origin: '*'
          content-type: application/json; charset=utf-8
        content: |-
          {
              "errors": {
                  "message": "User Not Logged In!"
              }
          }
    responseFields: {}
  - uri: '/api/roles/:id'
    httpMethods:
      - DELETE
    metadata:
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        example: nemo
        required: true
        type: string
        description: The ID of the api/role.
        match: ':id'
    queryParameters: {}
    bodyParameters: {}
    responses:
      - status: 400
        description: ''
        headers:
          access-control-allow-origin: '*'
          content-type: application/json; charset=utf-8
        content: |-
          {
              "errors": {
                  "message": "User Not Logged In!"
              }
          }
    responseFields: {}
  - uri: '/api/roles/:id/permissions'
    httpMethods:
      - GET
    metadata:
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        example: itaque
        required: true
        type: string
        description: The ID of the api/role.
        match: ':id'
    queryParameters: {}
    bodyParameters: {}
    responses:
      - status: 400
        description: ''
        headers:
          access-control-allow-origin: '*'
          content-type: application/json; charset=utf-8
        content: |-
          {
              "errors": {
                  "message": "User Not Logged In!"
              }
          }
    responseFields: {}
  - uri: '/api/roles/:id/permissions'
    httpMethods:
      - POST
    metadata:
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        example: minus
        required: true
        type: string
        description: The ID of the api/role.
        match: ':id'
    queryParameters: {}
    bodyParameters:
      permissions:
        name: permissions
        type: string
        example: et
        required: true
        description: ''
    responses:
      - status: 400
        description: ''
        headers:
          access-control-allow-origin: '*'
          content-type: application/json; charset=utf-8
        content: |-
          {
              "errors": {
                  "message": "User Not Logged In!"
              }
          }
    responseFields: {}
  - uri: /api/users
    httpMethods:
      - GET
    metadata:
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: {}
    queryParameters: {}
    bodyParameters: {}
    responses:
      - status: 400
        description: ''
        headers:
          access-control-allow-origin: '*'
          content-type: application/json; charset=utf-8
        content: |-
          {
              "errors": {
                  "message": "User Not Logged In!"
              }
          }
    responseFields: {}
  - uri: /api/users
    httpMethods:
      - POST
    metadata:
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: {}
    queryParameters: {}
    bodyParameters:
      password:
        name: password
        type: string
        example: quibusdam
        required: true
        description: ''
    responses:
      - status: 400
        description: ''
        headers:
          access-control-allow-origin: '*'
          content-type: application/json; charset=utf-8
        content: |-
          {
              "errors": {
                  "message": "User Not Logged In!"
              }
          }
    responseFields: {}
  - uri: '/api/users/:id'
    httpMethods:
      - GET
    metadata:
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        example: aspernatur
        required: true
        type: string
        description: The ID of the api/user.
        match: ':id'
    queryParameters: {}
    bodyParameters: {}
    responses:
      - status: 400
        description: ''
        headers:
          access-control-allow-origin: '*'
          content-type: application/json; charset=utf-8
        content: |-
          {
              "errors": {
                  "message": "User Not Logged In!"
              }
          }
    responseFields: {}
  - uri: '/api/users/:id'
    httpMethods:
      - PUT
    metadata:
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        example: iusto
        required: true
        type: string
        description: The ID of the api/user.
        match: ':id'
    queryParameters: {}
    bodyParameters:
      password:
        name: password
        type: string
        example: maxime
        required: true
        description: ''
    responses:
      - status: 400
        description: ''
        headers:
          access-control-allow-origin: '*'
          content-type: application/json; charset=utf-8
        content: |-
          {
              "errors": {
                  "message": "User Not Logged In!"
              }
          }
    responseFields: {}
  - uri: '/api/users/:id'
    httpMethods:
      - DELETE
    metadata:
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        example: necessitatibus
        required: true
        type: string
        description: The ID of the api/user.
        match: ':id'
    queryParameters: {}
    bodyParameters: {}
    responses:
      - status: 400
        description: ''
        headers:
          access-control-allow-origin: '*'
          content-type: application/json; charset=utf-8
        content: |-
          {
              "errors": {
                  "message": "User Not Logged In!"
              }
          }
    responseFields: {}
